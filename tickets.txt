+++ header
@file: pd-imagine/tickets.txt
+++

=== Ticket 1

@brief:
Rearrange the folder structure of this repository, to make it easier for other users to use it as a submodule in their project.

@status: DONE

@date:
- created on 2025-02-13
- updated on 2025-02-18

@details:
The role of this container is for providing development environment---it is NOT a real *app* image.
The basic idea is that a dev. container and the real project should be managed separately---the container is NOT intrinsic to the project itself, it is just a convenient tool to provide an isolated environment.

The current way to use this repository is to copy the `.devcontainer` folder to the root of the project folder.
It would be more streamlined if the user could just add this repository as a submodule, such that this whole repository just becomes that `.devcontainer` folder in the project folder.

The advantage of this approach is that the user can easily update the dev. container by pulling the latest changes from this repository.
Although one can also use a symlink to the `.devcontainer` folder in the current form to the project folder's `.devcontainer` folder, the content itself will NOT accessible from inside the container, since the symlink will not work across file systems.
This may be a disappointment since VS Code allow direct "hot" update the configuration of a "devcontainer".

The revised folder structure is as follows:
+++ tree
.
|- Dockerfile
|- requirements.txt
|- devcontainer.json
|- README.txt        # <- this file, non-essential for functioning
|- tickets.txt       # <- task tracking, non-essential for functioning
+++

To use this repository as a submodule, the user can execute the following command:
+++ cmd
cd <path-to-your-project-folder>
git clone --branch main --single-branch https://github.com/madpang/pd-imagine.git .devcontainer
# or if the project folder is already a git repository, use the following command
# git submodule add --branch main https://github.com/madpang/pd-imagine.git .devcontainer
+++

=== Ticket 2

@brief:
Allow user to sign the commit with GPG key.

@status: TODO

@date:
- created on 2025-02-20
- updated on 2025-02-20

@details:
Althought the [MS doc](https://code.visualstudio.com/remote/advancedcontainers/sharing-git-credentials) says that the GPG key is automatically shared, but the problem is that there is no way to input the passphrase of the GPG key.

This turns out to be quite a big task.

One workable solution ...
1. copy public keys
2. resolve all owership issue
3. source=/run/user/1000/gnpg/S.gpg-agent,target=/home/panda/.gnupg/S.gpg-agent,type=bind
+++ cmd
docker run -it \
	--mount type=bind,src=/run/user/1000/gnupg/S.gpg-agent,dst=/home/panda/.gnupg/S.gpg-agent,readonly \
	pd-imagine \
	/bin/bash
+++
Confirmed that the GPG key is shared by `gpg --list-secret-keys`.
